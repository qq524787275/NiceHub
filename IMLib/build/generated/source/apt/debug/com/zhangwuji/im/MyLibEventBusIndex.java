package com.zhangwuji.im;

import org.greenrobot.eventbus.meta.SimpleSubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberMethodInfo;
import org.greenrobot.eventbus.meta.SubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberInfoIndex;

import org.greenrobot.eventbus.ThreadMode;

import java.util.HashMap;
import java.util.Map;

/** This class is generated by EventBus, do not edit. */
public class MyLibEventBusIndex implements SubscriberInfoIndex {
    private static final Map<Class<?>, SubscriberInfo> SUBSCRIBER_INDEX;

    static {
        SUBSCRIBER_INDEX = new HashMap<Class<?>, SubscriberInfo>();

        putIndex(new SimpleSubscriberInfo(com.zhangwuji.im.imcore.manager.IMMessageManager.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onUserEvent", com.zhangwuji.im.imcore.event.MessageEvent.class),
            new SubscriberMethodInfo("onEventBackgroundThread",
                    com.zhangwuji.im.imcore.event.RefreshHistoryMsgEvent.class, ThreadMode.BACKGROUND),
        }));

        putIndex(new SimpleSubscriberInfo(com.zhangwuji.im.imcore.service.IMService.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEvent", com.zhangwuji.im.imcore.event.PriorityEvent.class, ThreadMode.POSTING,
                    10, false),
            new SubscriberMethodInfo("onEvent", com.zhangwuji.im.imcore.event.LoginEvent.class, ThreadMode.POSTING, 10,
                    false),
        }));

        putIndex(new SimpleSubscriberInfo(com.zhangwuji.im.imcore.manager.IMGroupManager.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEvent", com.zhangwuji.im.imcore.event.SessionEvent.class),
        }));

        putIndex(new SimpleSubscriberInfo(com.zhangwuji.im.imcore.manager.IMNotificationManager.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onEventMainThread", com.zhangwuji.im.imcore.event.UnreadEvent.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onEventMainThread", com.zhangwuji.im.imcore.event.GroupEvent.class,
                    ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(com.zhangwuji.im.imcore.manager.IMReconnectManager.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onUserEvent", com.zhangwuji.im.imcore.event.SocketEvent.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onUserEvent", com.zhangwuji.im.imcore.event.LoginEvent.class, ThreadMode.MAIN),
        }));

    }

    private static void putIndex(SubscriberInfo info) {
        SUBSCRIBER_INDEX.put(info.getSubscriberClass(), info);
    }

    @Override
    public SubscriberInfo getSubscriberInfo(Class<?> subscriberClass) {
        SubscriberInfo info = SUBSCRIBER_INDEX.get(subscriberClass);
        if (info != null) {
            return info;
        } else {
            return null;
        }
    }
}
